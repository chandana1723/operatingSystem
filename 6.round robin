#include <stdio.h>

int main() {
    int n, tq, bt[10], rt[10], wt[10], tat[10], ct[10];
    int time = 0, remain, flag;
    float avgWT = 0, avgTAT = 0;

    // Input number of processes
    printf("Enter number of processes: ");
    scanf("%d", &n);

    // Input burst times
    printf("Enter burst times for each process:\n");
    for (int i = 0; i < n; i++) {
        printf("P%d: ", i+1);
        scanf("%d", &bt[i]);
        rt[i] = bt[i]; // remaining time initially = burst time
    }

    // Input time quantum
    printf("Enter Time Quantum: ");
    scanf("%d", &tq);

    remain = n;

    // Round Robin
    while (remain != 0) {
        flag = 0;
        for (int i = 0; i < n; i++) {
            if (rt[i] > 0) {
                if (rt[i] > tq) {
                    time += tq;
                    rt[i] -= tq;
                } else {
                    time += rt[i];
                    ct[i] = time;
                    tat[i] = ct[i];          // since arrival time = 0
                    wt[i] = tat[i] - bt[i];
                    avgWT += wt[i];
                    avgTAT += tat[i];
                    rt[i] = 0;
                    remain--;
                }
                flag = 1;
            }
        }
        if (flag == 0) break;
    }

    // Print results
    printf("\nProcess\tBT\tCT\tTAT\tWT\n");
    for (int i = 0; i < n; i++) {
        printf("P%d\t%d\t%d\t%d\t%d\n", i+1, bt[i], ct[i], tat[i], wt[i]);
    }

    printf("\nAverage TAT = %.2f", avgTAT/n);
    printf("\nAverage WT = %.2f\n", avgWT/n);

    return 0;
}
